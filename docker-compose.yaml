version: '3.5'

services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RUBY_VERSION: '2.7.1'
        BUNDLER_VERSION: '2.4.22'
    image: icmed6:1.0.0
    networks:
      icmed6_default:
        ipv4_address: 172.19.0.10
    tmpfs:
      - /tmp

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - packs:/app/public/packs
      - node_modules:/app/node_modules
      - rails_cache:/app/tmp/cache
    environment:
      - BOOTSNAP_CACHE_DIR=/usr/local/bundle/_bootsnap
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - EDITOR=nano
      - RAILS_ENV=${RAILS_ENV:-development}
      - TEST_ENV_NUMBER=3
    depends_on: []  # Пустой список, так как PostgreSQL не используется

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
    networks:
      icmed6_default:
        ipv4_address: 172.19.0.11
    depends_on: []  # Пустой список для корректного формата

  rails:
    <<: *backend
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b 0.0.0.0"
    ports:
      - '3000:3000'
    env_file: .env
    depends_on: []  # Пустой список для корректного формата

  test:
    <<: *backend
    command: bash -c "tail -f /dev/null"
    environment:
      RAILS_ENV: test
    env_file: .env
    depends_on: []  # Пустой список для корректного формата

  redis:
    image: redis:6.2.1-alpine
    command: redis-server
    networks:
      icmed6_default:
        ipv4_address: 172.19.0.6
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.sidekiq
    depends_on:
      - redis  # Удалили postgresql из зависимостей
    volumes:
      - sidekiq_data:/icmed6
      - ./tmp/:/icmed6/tmp
    networks:
      icmed6_default:
        ipv4_address: 172.19.0.7
    environment:
      - REDIS_URL=redis://redis:6379/0
      # Удалить или изменить строку с DATABASE_URL в зависимости от использования SQLite

  elasticsearch:
    image: elasticsearch:7.7.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elastic_data:/var/lib/elasticsearch/data
    networks:
      icmed6_default:
        ipv4_address: 172.19.0.8
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: kibana:7.7.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      icmed6_default:
        ipv4_address: 172.19.0.9
    depends_on:
      - elasticsearch

networks:
  icmed6_default:
    name: icmed6_default
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1

volumes:
  bundle:
  packs:
  node_modules:
  rails_cache:
  pg_data:
  redis_data:
  sidekiq_data:
  elastic_data:
